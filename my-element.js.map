{"version":3,"file":"my-element.js","sourceRoot":"","sources":["src/my-element.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;AAEH,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAiB,MAAM,KAAK,CAAC;AAC1D,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAE1D;;;;;;GAMG;AAEH,IAAa,SAAS,GAAtB,MAAa,SAAU,SAAQ,UAAU;IAAzC;;QAYE;;WAEG;QAEI,aAAQ,GAAG,OAAO,CAAC;QAE1B;;WAEG;QAEI,UAAK,GAAG,CAAC,CAAC;IAKnB,CAAC;IAHiB,MAAM;QACpB,OAAO,IAAI,CAAA,qBAAqB,CAAC;IACnC,CAAC;CACF,CAAA;AA1BwB,gBAAM,GAAG,GAAG,CAAA;;;;;;;;;GASjC,CAAA;AAMF;IADC,QAAQ,EAAE;2CACe;AAM1B;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;wCACR;AAtBN,SAAS;IADrB,aAAa,CAAC,YAAY,CAAC;GACf,SAAS,CA2BrB;SA3BY,SAAS","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {LitElement, html, css, TemplateResult} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n\n/**\n * An example element.\n *\n * @fires count-changed - Indicates when the count changes\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('my-element')\nexport class MyElement extends LitElement {\n  public static override styles = css`\n    :host {\n      display: block;\n    }\n    header {\n      width: 100%;\n      height: 10rem;\n      background-color: green;\n    }\n  `;\n\n  /**\n   * The name to say \"Hello\" to.\n   */\n  @property()\n  public navItems = 'World';\n\n  /**\n   * The number of times the button has been clicked.\n   */\n  @property({type: Number})\n  public count = 0;\n\n  public override render(): TemplateResult {\n    return html` <header></header> `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'my-element': MyElement;\n  }\n}\n"]}