{"version":3,"file":"my-element.js","sourceRoot":"","sources":["src/my-element.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;AAEH,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAiB,MAAM,KAAK,CAAC;AAC1D,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAC1D,OAAO,2DAA2D,CAAC;AAEnE,MAAM,OAAO,eAAgB,SAAQ,WAA2B;CAAG;AAEnE;;;;;;GAMG;AAEH,IAAa,SAAS,GAAtB,MAAa,SAAU,SAAQ,UAAU;IAAzC;;QAaS,aAAQ,GAAc,EAAE,CAAC;QAOhC;;;;;;;;;;;;;;;;;;;;;;;;UAwBE;IACJ,CAAC;IA9BiB,MAAM;QACpB,OAAO,IAAI,CAAA;gBACC,CAAC,IAAI,CAAA,eAAe,EAAE,IAAI,CAAA,gBAAgB,CAAC;KACtD,CAAC;IACJ,CAAC;CA0BF,CAAA;AA5CwB,gBAAM,GAAG,GAAG,CAAA;;;;;;;;;GASjC,CAAA;AAGF;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,CAAA,KAAc,CAAA,EAAC,CAAC;2CACD;AAbrB,SAAS;IADrB,aAAa,CAAC,YAAY,CAAC;GACf,SAAS,CA6CrB;SA7CY,SAAS","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {LitElement, html, css, TemplateResult} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\nimport '@shoelace-style/shoelace/dist/components/button/button.js';\n\nexport class NavigationEvent extends CustomEvent<{href: string}> {}\n\n/**\n * An example element.\n *\n * @fires count-changed - Indicates when the count changes\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('my-element')\nexport class MyElement extends LitElement {\n  public static override styles = css`\n    :host {\n      display: block;\n    }\n    header {\n      width: 100%;\n      height: 10rem;\n      background-color: green;\n    }\n  `;\n\n  @property({type: Array<NavItem>})\n  public navItems: NavItem[] = [];\n\n  public override render(): TemplateResult {\n    return html`\n      <header>${[html`<div>hi</div>`, html`<div>bye</div>`]}</header>\n    `;\n  }\n  /*\n  #navLink(label: string, href: string): TemplateResult {\n    return html`\n      <sl-button\n        variant=\"text\"\n        class=\"nav-link\"\n        href=\"${href}\"\n        @click=\"${(ev: MouseEvent): void => {\n          if (!ev.ctrlKey) {\n            this.dispatchEvent(\n              new NavigationEvent('navigation', {\n                detail: {href},\n                bubbles: true,\n                composed: true,\n              })\n            );\n            ev.preventDefault();\n            window.history.pushState({}, '', href);\n          }\n        }}\"\n        >${label}</sl-button\n      >\n    `;\n  }\n  */\n}\n\n\nexport interface NavItem {\n  name: string;\n  href: string;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'my-element': MyElement;\n  }\n}\n"]}